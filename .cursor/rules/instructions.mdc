---
description: 
globs: 
alwaysApply: true
---
# Projeto de Gestão Empresarial

## Informações Importantes

- **Ambiente**: Windows PowerShell
- **Comando Shadcn**: `npx shadcn@latest add`

## Paleta de Cores

### Modo Claro
```css
:root.light {
  --primary: #009688;    /* Azul-esverdeado do logo */
  --secondary: #F5F5F5;  /* Cinza claro */
  --accent: #EDE4D0;     /* Bege claro do texto do logo */
  --text: #333333;       /* Cinza escuro */
  --background: #FFFFFF; /* Branco */
}
```

### Modo Escuro
```css
:root.dark {
  --primary: #006D77;    /* Azul-esverdeado escuro */
  --secondary: #2C2C2C;  /* Cinza escuro */
  --accent: #EDE4D0;     /* Bege claro */
  --text: #E0E0E0;       /* Cinza claro */
  --background: #121212; /* Preto profundo */
}
```

## Backend (Django) - pasta `backend`

### Pacotes Instalados
- `django`: Framework base para modelos, views e URLs.
- `djangorestframework`: API RESTful para consumo de dados pelo frontend.
- `django-allauth`: Autenticação de usuários para acesso restrito.
- `psycopg2-binary`: Conexão com PostgreSQL na Railway.
- `django-cors-headers`: Permite acesso do frontend (Vercel) à API (Railway).
- `channels`: Suporte a WebSockets para dashboards em tempo real.
- `channels_redis`: Camada Redis para escalabilidade em produção.
- `gunicorn`: Servidor WSGI para Django em produção.
- `python-decouple`: Gerenciamento seguro de variáveis de ambiente.
- `django-filter`: Filtragem de dados na API (ex.: funcionários por setor).

### Criação
```bash
django-admin startproject gestao_api
```

## Frontend (Next.js) - pasta `frontend`

### Pacotes Instalados
- `tailwindcss@3.4.17`, `postcss`, `autoprefixer`: Estilização utilitária. Inicializar com:
  ```bash
  npx tailwindcss init -p
  ```
- `shadcn/ui`: Componentes estilizados com Tailwind. Inicializar com:
  ```bash
  npx shadcn@latest init
  ```
  Adicionar componentes:
  ```bash
  npx shadcn@latest add <componente>
  ```
  Exemplo: `npx shadcn@latest add toast`
- `@tanstack/react-query`: Gerenciamento de dados assíncronos e caching.
- `framer-motion`: Animações suaves para dashboards e transições.
- `recharts`: Gráficos interativos para dashboards.
- `react-hook-form`: Gerenciamento de formulários com validação.
- `zod`: Validação de esquemas para formulários.
- `react-use-websocket`: WebSockets em React.
### Criação
```bash
npx create-next-app@latest gestao_web
```
